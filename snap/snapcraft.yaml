name: multipass
title: Multipass
icon: data/multipass.gui.svg
summary: Instant Ubuntu VMs
description: |
  Multipass is a tool to launch and manage VMs on Windows, Mac and Linux that
  simulates a cloud environment with support for cloud-init. Get Ubuntu
  on-demand with clean integration to your IDE and version control on your
  native platform.
license: GPL-3.0

adopt-info: multipass
confinement: strict
base: core22

layout:
  /usr/lib/$SNAPCRAFT_ARCH_TRIPLET/qemu:
    bind: $SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/qemu
  /usr/share/X11:
    bind: $SNAP/usr/share/X11
  /etc/fonts:
    bind: $SNAP/etc/fonts
  /usr/share/fonts:
    bind: $SNAP/usr/share/fonts
  /usr/share/icons:
    bind: $SNAP/usr/share/icons

environment:
  # GDK pixbuf
  GDK_PIXBUF_MODULEDIR: $SNAP/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/gdk-pixbuf-2.0/2.10.0/loaders
  GDK_PIXBUF_MODULE_FILE: $SNAP_COMMON/loaders.cache
  ARCH_TRIPLET: ${SNAPCRAFT_ARCH_TRIPLET}

plugs:
  all-home:
    interface: home
    read: all

apps:
  multipassd:
    command: bin/launch-multipassd
    environment:
      LD_LIBRARY_PATH: &library-path
        $SNAP/lib:$SNAP/lib/$SNAPCRAFT_ARCH_TRIPLET:$SNAP/usr/lib:$SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET
      PATH: &path
        $SNAP/usr/sbin:$SNAP/usr/bin:$SNAP/sbin:$SNAP/bin:$PATH
      QT_PLUGIN_PATH: $SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/qt5/plugins
      XDG_DATA_HOME: $SNAP_COMMON/data
      XDG_CACHE_HOME: $SNAP_COMMON/cache
      XDG_CONFIG_HOME: &daemon-config $SNAP_DATA/config
      DAEMON_CONFIG_HOME: *daemon-config # temporary
    daemon: simple
    stop-timeout: 5m
    plugs:
      - all-home
      - firewall-control
      - kvm
      - libvirt
      - multipass-support
      - network-bind
      - network-control
      - network-manager # for bridge creation
      - network-observe # for network listing (to read `/sys/devices/**/net/*`)
      - lxd
      - removable-media
      - system-observe  # to read the host's os-release
  multipass:
    environment:
      <<: &client-environment
        LD_LIBRARY_PATH: *library-path
        PATH: *path
        QT_PLUGIN_PATH: $SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/qt5/plugins
        XDG_DATA_HOME: $SNAP_USER_DATA/data
        XDG_DATA_DIRS: $SNAP/usr/share:$SNAP_DATA/data
        XDG_CACHE_HOME: $SNAP_USER_DATA/cache
        XDG_CONFIG_HOME: $SNAP_USER_DATA/config
      DAEMON_CONFIG_HOME: *daemon-config # temporary
    command: bin/launch-multipass
    completer: etc/bash_completion.d/snap.multipass
    plugs:
      - all-home
      - network
  gui:
    environment: *client-environment
    command: bin/launch-multipass-gui
    desktop: usr/share/applications/multipass.gui.desktop
    autostart: multipass.gui.autostart.desktop
    plugs:
      - home
      - network
      - unity7
      - wayland
      - x11
      - system-observe

parts:
  libvirt:
    plugin: nil
    stage-packages:
    - libvirt0
    stage:
    - -usr/lib/*/libssh*  # this avoids extra libssh libs in the snap

  multipass:
    plugin: cmake
    build-snaps:
    - cmake
    build-environment:
    - PATH: /snap/bin:$PATH
    build-packages:
    - on arm64: [libgles2-mesa-dev]
    - on armhf: [libgles2-mesa-dev]
    - build-essential
    - git
    - libapparmor-dev
    - libqt5x11extras5-dev
    - libsystemd-dev
    - libssl-dev
    - libvirt-dev
    - pkg-config
    - qtbase5-dev
    - qtbase5-dev-tools
    stage-packages:
    - apparmor
    - on amd64: [libgl1]
    - on armhf: [libgles2-mesa]
    - on arm64: [libgles2-mesa]
    - libpng16-16
    - libqt5core5a
    - libqt5gui5
    - libqt5network5
    - libqt5widgets5
    - libqt5x11extras5
    - libssl3
    - libxml2
    - dnsmasq-base
    - dnsmasq-utils
    source: .
    cmake-parameters:
    - -DCMAKE_BUILD_TYPE=Release
    - -DCMAKE_INSTALL_PREFIX=/
    - -DMULTIPASS_ENABLE_TESTS=off
    - -DMULTIPASS_UPSTREAM=origin
    override-build: |
      snapcraftctl build
      set -e
      mkdir -p ${SNAPCRAFT_PART_INSTALL}/etc/bash_completion.d/
      echo 'export PATH="${PATH}:/snap/bin:/var/lib/snapd/snap/bin"' > ${SNAPCRAFT_PART_INSTALL}/etc/bash_completion.d/snap.multipass
      cat ../src/completions/bash/multipass >> ${SNAPCRAFT_PART_INSTALL}/etc/bash_completion.d/snap.multipass
      VERSION=$( awk -F\" '/version_string/ { print $2 }' gen/multipass/version.h )
      snapcraftctl set-version ${VERSION}
      snapcraftctl set-grade $( echo ${VERSION} | grep -qe '^[0-9]\+\.[0-9]\+\.[0-9]\+\($\|-rc\)' && echo stable || echo devel )
      sed -i -e 's@^Icon=\(.\+\)$@Icon=/usr/share/icons/hicolor/scalable/apps/\1.svg@' ${SNAPCRAFT_PART_INSTALL}/usr/share/applications/multipass.gui.desktop

      cd ${SNAPCRAFT_PART_SRC}/3rd-party
      find . -name 'LICENSE*' -print0 | xargs -0 -I FILE install --mode=644 -D --no-target-directory FILE ${SNAPCRAFT_PART_INSTALL}/licenses/FILE

  qemu:
    plugin: nil
    override-pull: ""
    build-packages: [execstack]
    stage-packages:
    - ipxe-qemu-256k-compat-efi-roms
    - on amd64: [qemu-system-x86, ovmf]
    - on armhf: [qemu-system-arm, qemu-efi]
    - on arm64: [qemu-system-arm, qemu-efi]
    - qemu-utils
    - libslang2
    stage:
    - -usr/lib/*/libssh*
    organize:
      usr/lib/*/pulseaudio/libpulsecommon-*.so: usr/lib/
      usr/share/seabios/*: qemu/
      usr/lib/ipxe/qemu/*: qemu/
      usr/share/ovmf/*: qemu/
      usr/share/qemu-efi-aarch64/*: qemu/
    override-build: |
      snapcraftctl build
      cd ${SNAPCRAFT_PART_INSTALL}/usr/share/qemu
      execstack --clear-execstack openbios-ppc openbios-sparc32 openbios-sparc64

  kvm-support:
    plugin: nil
    override-pull: ""
    stage-packages:
    - on amd64: [msr-tools]

  terminal:
    plugin: nil
    stage-packages:
      - xfce4-terminal
      - dmz-cursor-theme
      - libgdk-pixbuf2.0-bin # GDK pixbuf
      - fonts-freefont-ttf
      - libglib2.0-0
    override-build: |
      snapcraftctl build
      update-mime-database $SNAPCRAFT_PART_INSTALL/usr/share/mime
      rm -f $SNAPCRAFT_PART_INSTALL/usr/share/applications/exo-*
      mkdir -p $SNAPCRAFT_PART_INSTALL/usr/share/icons/default/
      echo "[Icon Theme]" > $SNAPCRAFT_PART_INSTALL/usr/share/icons/default/index.theme
      echo "Inherits=DMZ-White" >> $SNAPCRAFT_PART_INSTALL/usr/share/icons/default/index.theme
    stage:
      - -usr/share/doc
    organize:
      usr/bin/xfce4-terminal.wrapper: bin/x-terminal-emulator

  glue:
    plugin: dump
    source: snap-wrappers
